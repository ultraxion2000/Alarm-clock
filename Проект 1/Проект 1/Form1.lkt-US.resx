<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label1.Location" type="System.Drawing.Point, System.Drawing">
    <value>167, 22</value>
  </data>
  <data name="label2.Location" type="System.Drawing.Point, System.Drawing">
    <value>139, 93</value>
  </data>
  <data name="textBox1.Location" type="System.Drawing.Point, System.Drawing">
    <value>43, 161</value>
  </data>
  <data name="textBox2.Location" type="System.Drawing.Point, System.Drawing">
    <value>196, 161</value>
  </data>
  <data name="textBox3.Location" type="System.Drawing.Point, System.Drawing">
    <value>353, 161</value>
  </data>
  <data name="label3.Location" type="System.Drawing.Point, System.Drawing">
    <value>149, 170</value>
  </data>
  <data name="label4.Location" type="System.Drawing.Point, System.Drawing">
    <value>302, 170</value>
  </data>
  <data name="label5.Location" type="System.Drawing.Point, System.Drawing">
    <value>459, 170</value>
  </data>
  <data name="button1.Location" type="System.Drawing.Point, System.Drawing">
    <value>144, 266</value>
  </data>
  <data name="button2.Location" type="System.Drawing.Point, System.Drawing">
    <value>144, 352</value>
  </data>
  <data name="$this.ClientSize" type="System.Drawing.Size, System.Drawing">
    <value>508, 440</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAALluAAC5bgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAICAAACAgAAAf38AAICAAACAgAABgIAAA4CA
        AASAgAAFgIAABYKCAARubgYEVVUPAmJiCgBaWg0AWVkNAGBgCwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAICAAACAgAAAgIAAAICAAACAgAADgIAAA4CA
        AACBgQAAgIAAAAAAAAAAAAAAAABdAFRUDwBTUw8AUVEQAVdXDgRbWw0BWFgOAFdXDgBeXgwAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAgAAAgIAAAICAAACAgAACgIAAAoCA
        AACAgAAAgIAADoCAADyAgABjgIAAen9/AH+EhABxdHQFUlNTDyWNjQACZGQJAFRUDwFXVw4DXV0MAVxc
        DABaWg0AZGQKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgIAAAICAAACBgQAAgIAAA4CA
        AAGAgAAAgIAAPoCAAKeAgADrgIAA/4CAAP9/fwD/goIA/3t7Av9dXQz/VlYO/FhYDtBZWQ12XFwMFFpa
        DQBXVw4DWVkNAlhYDgBYWA4AYWELAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAICAAACAgAAAgIAAAICA
        AASAgAAAgIAAJoCAALiAgAD/gIAA/oCAAP+AgAD9f38A+4KCAPt7ewL7WloN+1VVD/xXVw7/V1cO/ldX
        Dv9XVw7uWVkNbnx8AgFPTxEBWVkNAldXDgBYWA4AYWEKAAAAAAAAAAAAAAAAAAAAAACAgAAAgIAAAICA
        AACAgAAEgIAAAICAAFuAgAD2gIAA/4CAAPyAgAD7gIAA/n9/AP+CggD/e3sC/1tbDf9VVQ//WFgO/1dX
        Dv9XVw78V1cO+1dXDv1XVw7/WFgOulxcDBNfXwsAWVkNAlhYDgBZWQ0Aa2sIAAAAAAAAAAAAgIAAAICA
        AACAgAAAgIAAA4CAAACAgABxgIAA/4CAAP2AgAD7gIAA/4CAAP9/fwD/hIQC/35+Bf9cXA//V1cQ/1pa
        Ef9ZWRH/WFgP/1dXDv9XVw7/V1cO/VdXDvpXVw7/WFgO1VtbDRpcXAwAWloNAltbDQBbWwwAAAAAAAAA
        AACAgAAAgIAAAICAAAOAgAAAgIAAXYCAAP+AgAD7gIAA/YCAAP+AgAD/gYEC/4ODAv9ycgD/Tk4A/01N
        BP9RUQb/TEwB/0pKAP9TUwj/WVkS/1dXDv9XVw7/V1cO/1dXDvpXVw7/WFgOyl9fCwtlZQkAW1sNAVZW
        DgBlZQkAgIAAAICAAACAgAACgIAAAICAACqAgADzgIAA/4CAAP2AgAD/gIAA/4KCAv98fAD/dHQD/4SE
        TP+qqon/vLyY/729mf+2tpP/mppy/2VlJf9LSwD/WFgQ/1hYD/9XVw7/V1cO/1dXDvpXVw7/WFgOmVVV
        DwBVVQ8DX18LAFtbDQCAgAAAgIAAAICAAAKAgAAAgIAAtICAAP+AgAD7gIAA/4CAAP+CggP/eXkA/5CQ
        Kf/Jyaf/xMSK/6WlQf+Tkx//kJAa/5mZLP+0tGL/0dGq/56eeP9OTgT/V1cO/1hYD/9XVw7/V1cO/1dX
        Dv1XVw7/WVkNQllZDQBZWQ0DV1cOAICAAACAgAADgIAAAICAAEKAgAD/gIAA/YCAAP+AgAD/goIC/3l5
        AP+amjr/29u2/5iYLf91dQD/eHgB/3x8AP98fAD/enoA/3V1AP99fQD/w8N+/7e3mf9PTwX/WFgP/1dX
        Dv9XVw7/V1cO/FdXDv9YWA65UFAQAE9PEQFcXAwAgIAAAICAAAOAgAAAgIAApICAAP+AgAD8gIAA/4GB
        Af99fQD/iooa/9vbtP+JiRr/d3cA/4ODBf+BgQP/gYEB/4CAAf+BgQL/goIE/4CABP9wcAD/wcF7/6Wl
        gf9LSwD/WVkR/1dXDv9XVw7/V1cO/1dXDv5aWg0xWVkNAFlZDQKAgAABgIAAAICAABCAgADngIAA/4CA
        AP6AgAD/goID/3d3AP/Gxo7/pKRP/3Z2AP+DgwX/gIAA/4CAAP+AgAD/gIAA/4CAAP+AgAD/gIAB/4GB
        A/95eQD/0NCm/25uM/9RUQX/WFgP/1dXDv9XVw77V1cO/1hYDXtXVw4AV1cOBICAAAOAgAAAgIAAO4CA
        AP+AgAD+gIAA/4CAAf99fQD/jY0a/83Nnf98fAD/gYEC/4CAAP+AgAD/gIAA/4CAAf+CggP/gYEB/4CA
        AP+AgAD/goID/3d3AP+np1D/p6eB/0pKAP9aWhL/V1cO/1dXDvxXVw7/WFgOt1ZWDgBWVg4DgIAABICA
        AACAgABigIAA/4CAAPuAgAD/gYEC/3l5AP+mpk3/ubl3/3Z2AP+CggT/gIAA/4CAAP+AgAD/fn4A/3d3
        AP97ewD/gIAB/4KCBP+CggT/fn4A/42NGP+/v5v/VFQL/1hYD/9XVw7/WFgO/VZWDv9YWA7a2toAAqGh
        AACAgAAEgIAAAICAAHmAgAD/gIAA+4CAAP+CggT/c3MA/7CwZf+url7/d3cA/4KCA/+AgAD/gIAB/35+
        AP+LixX/rq5c/5SUKP9/fwL/dnYA/3h4Af98fAD/g4ME/8XFnf9VVQ//VVUK/1hYD/9VVQ7+WloN/3d3
        A+qXlwANl5cAAICAAAWAgAAAgIAAfoCAAP+AgAD7gYED/3t7AP+goEH/xsaP/6qqV/94eAD/goID/4CA
        AP+BgQL/enoA/5ubN//d3bz/xMSI/9DQof/CwoT/qKhR/4yMGf+FhQj/wMCW/5ubcv9kZB//U1MK/1lZ
        Dv55eQP/g4MA7Xh4AhB+fgAAgIAABICAAACAgABvgIAA/4CAAPuCggT/d3cA/66uXf/OzqD/s7Nr/3h4
        AP+CggT/gIAA/4GBAv95eQD/oKA+/7m5fv9vbwD/iooT/6GhQf+9vXr/x8eP/5mZMv+6upX/uLiZ/2Bg
        Hf9WVgr/eXkD/YKCAP9/fwDjgoIACIGBAACAgAAEgIAAAICAAFCAgAD/gIAA/IGBAv96egD/mZk0/8rK
        mP/Gxo//gYEK/4CAAP+AgAD/gYEC/3l5AP+fnz//wMCB/3h4AP+AgAT/eXkA/3h4A/9zcwD/qalV/7q6
        nf+np4L/UlID/3t7Bf+DgwD8f38A/4CAAMqAgAAAgIAAAYCAAAKAgAAAgIAAJYCAAPqAgAD/gIAA/oCA
        AP9/fwH/x8eP/8vLlP+trWD/dHQA/4SEBv+BgQL/eXkA/5+fP/+/v3//d3cA/4KCBP+CggT/gYED/4SE
        Df/Cwpn/uLic/4uLVP9ubgD/hIQC/39/APuAgAD/gIAAmoCAAACAgAAEgIAAAH9/AACAgAAAgIAAy4CA
        AP+AgAD9gYED/3h4AP+kpEz/zc2a/8zMmP+amjn/dHQA/4ODBv97ewD/oKBB/8DAgf94eAD/hIQI/319
        Af94eAD/xcWF/7u7j/+7u5v/dnYB/4ODAP9/fwD/gIAA/ICAAP+AgABVgIAAAICAAASAgAAAgIAABICA
        AACAgAB1gIAA/4CAAPuAgAD/goIC/3h4AP++vn//ycmR/8zMmv+oqFD/fHwB/29vAP+Xlzn/t7d0/29v
        AP94eAD/i4sX/8XFi//ExIn/1NSl/5CQKv98fAD/gYEC/4CAAP6AgAD/gIAA4oCAAA+AgAAAgIAAAYCA
        AACAgAABgIAAAICAABaAgADngIAA/4CAAP6AgAD/gIAB/3t7Af/AwIH/zMyZ/8rKlP/Ly5f/s7Nn/6Sk
        SP+kpEj/p6dP/8LChP/Ozpz/xsaO/9LSo/+YmDf/eXkA/4KCAv+AgAD/gIAA+4CAAP+AgAB+gIAAAICA
        AAOAgAAAgIAAAICAAACAgAADgIAAAICAAG6AgAD/gIAA+oCAAP+AgAD/gIAC/3l5AP+pqVL/z8+e/6qq
        VP+srFf/v79//7+/f/+6unT/oaFB/8LChP/FxYj/i4sc/3l5AP+CggP/gIAA/4CAAP2AgAD/gIAA24CA
        AA6AgAAAgIAAAYCAAAAAAAAAgIAAAICAAACAgAABgIAAAICAALWAgAD/gIAA+oCAAP+AgAD/gYED/3d3
        AP+HhxL/iIgV/3R0AP93dwH/d3cA/3Z2AP96egP/kJAf/3p6Af99fQH/goIC/4CAAP+AgAD+gIAA/YCA
        AP+AgABGgIAAAICAAAOAgAAAgIAAAAAAAACAgAAAgIAAAICAAAGAgAAAgIAAE4CAANKAgAD/gIAA+oCA
        AP+AgAD/goID/35+Af9+fgH/goIE/4KCBP+CggT/goIE/4GBAv99fQD/gYED/4GBAf+AgAD/gIAA/YCA
        APuAgAD/gIAAbICAAACAgAADgIAAAICAAAAAAAAAAAAAAAAAAACAgAAAgIAAAICAAAKAgAAAgIAAGICA
        AMuAgAD/gIAA+4CAAPyAgAD/gIAB/4CAAf+AgAD/gIAA/4CAAP+AgAD/gIAA/4GBAf+AgAD/gIAA/YCA
        APuAgAD/gIAA/4CAAGyAgAAAgIAABICAAACAgAAAgIAAAAAAAAAAAAAAAAAAAICAAACAgAAAgIAAAICA
        AAKBgQAAgIAACYCAAJiAgAD/gIAA/4CAAP6AgAD7gIAA/ICAAP2AgAD+gIAA/oCAAP2AgAD9gIAA+4CA
        APyAgAD+gIAA/4CAAOGAgABDgIAAAICAAASAgAAAgIAAAICAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAICA
        AACAgAAAgIAAAICAAAKAgAADgIAAAICAADuAgAC8gIAA/YCAAP+AgAD/gIAA/4CAAP+AgAD/gIAA/4CA
        AP+AgAD+gIAA/4CAAOiAgAB+gIAADYCAAACAgAADgIAAAICAAACAgAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAICAAACAgAAAgIAAAICAAAGAgAADf38AAH9/AACAgAAsgIAAe4CAALiAgADbgIAA64CA
        AO6AgADlgIAAzICAAJ2AgABVgIAADYCAAACAgAACgIAAA4CAAACAgAAAgIAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAIGBAACAgAAAhIQAAH9/AACAgAADgIAAAoCAAACAgAAAgIAAAICA
        AAOAgAAOgIAAEYCAAAiAgAAAgIAAAICAAACAgAAAgIAABICAAAGAgAAAgIAAAICAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAgAAAgIAAAICAAACAgAAAgIAAAoCA
        AAWAgAADfX0AAH5+AACAgAAAgIAAAICAAAGAgAAEgIAABICAAAGAgAAAgIAAAICAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/6AF//6J0X/5EARf9EABL+kAABfCAAAr1AAAFagAAAmQAAAIEAAABCAA
        AAQgAAACQAAAAkAAAAJAAAABQAAAAUAAAAFAAAABQAAAAkAAAAIgAAACIAAAAiAAAASQAAAEiAAACugA
        ABXUAAAr6gAAS/SAAJf6IAJP/ZQov/9BQn8=
</value>
  </data>
</root>